pip install NumPy

_____________ -------> ОСИ                            --
|__|__|__|__||__|   |                                               |
|__|__|__|__||__|   |               		          |
|__|__|__|__||__|   |                                                 > РАЗМЕРНОСТЬ
|__|__|__|__||__|   |                                                |
|__|__|__|__||__|   |                                               |
	         \/ ----> ИНТДЕКСЫ               --


- numpy.array(object, dtype=None) # object - список или кортеж или функция 
				# dtype - тип данным, если == None, опрееляет по входным данным

- СОЗДАНИЕ МАССИВА
	import numpy as np
	a = np.array([1, 2, 3, 4])
	a
	>>> array([1, 2, 3, 4])

	a.dtype
	>>>dtype('int32') # size is 32 bits

	b = np.array([1, 2, '3', True])
	b
	>>>array(['1', '2', '3', 'True'], dtype='<U11') # all elemens are str 
	b.dtype
	>>>dtype('<U11')

- ПОЛУЧЕНИЕ ДАННЫХ 
	name[1] . . .. [] [] [] [] - выводим данные массива, двумерные и трехмерные массивы 

- ИЗМЕНЕНИЕ ДАННЫХ 
	b[1] = '123'
	b
	array(['1', '123', '3', 'True'], dtype='<U11')
	b[1] = 10
	b
	array(['1', '10', '3', 'True'], dtype='<U11')
	# автоматически изменяет число в строку 

- ОСОБЕННОСТИ 
	1. Массив из элемента
	a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])
	>>>a[ [0, 0, 0, 0, 0]]
	array([1, 1, 1, 1, 1]) 	формирует массив из полученного элемента 

	2. Пропуск элемента 	
	array([1, 2, 3])
	>>> a[ [True, False, True]]
	array([1, 3]) # False откидывает элемент 

	3. СОЗДАНИЕ МАТРИЦЫ 
	>>>a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])
	>>>b = a.reshape(3, 3 ) # превращение простого массива в двумерный 
	>>>b
	array([[1, 2, 3],
       	  [4, 5, 6],
       	  [7, 8, 9]])

	>>>b[0][1]
	2
	>>>b[2, 1]
	8



