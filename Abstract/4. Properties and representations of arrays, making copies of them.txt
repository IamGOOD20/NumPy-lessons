- ИЗМЕНЕНИЕ ТИПА ДАННЫХ МАССИВА

    >>>a = np.array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])
    >>>a.dtype
    dtype('float64')

    >>>a.dtype = np.int8
    >>>a
    array(
        [-102, -103, -103, -103, -103, -103,  -71,   63, -102, -103, -103,
       -103, -103, -103,  -55,   63,   51,   51,   51,   51,   51,   51,
        -45,   63, -102, -103, -103, -103, -103, -103,  -39,   63,    0,
          0,    0,    0,    0,    0,  -32,   63,   51,   51,   51,   51,
         51,   51,  -29,   63,  102,  102,  102,  102,  102,  102,  -26,
         63, -102, -103, -103, -103, -103, -103,  -23,   63,  -51,  -52,
        -52,  -52,  -52,  -52,  -20,   63], dtype=int8)

    >>>a.size # 72
    # почему? Каждое из чисел конвертировалось в 8 байтовое число 9 * 8 = 72

    >>>a.dtype = np.float32
    >>>a
    array(
        [-1.58818684e-23,  1.44999993e+00, -1.58818684e-23,  1.57499993e+00,
        4.17232506e-08,  1.64999998e+00, -1.58818684e-23,  1.69999993e+00,
        0.00000000e+00,  1.75000000e+00,  4.17232506e-08,  1.77499998e+00,
        2.72008302e+23,  1.79999995e+00, -1.58818684e-23,  1.82499993e+00,
       -1.07374184e+08,  1.84999990e+00], dtype=float32)

    a.size # 18

- СКОЛЬКО БАЙТ ВЕСИТ МАССИВ
    >>>a.itemsize
    4

    узнать размер массива в байтах?
    >>>a.itemsize * a.size

- УЗНАТЬ РАЗМЕРНОСТЬ МАССИВА
    >>>a = np.ones([3, 2, 5])
    >>>a
    array(
       [[[1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1.]],

       [[1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1.]],

       [[1., 1., 1., 1., 1.],
        [1., 1., 1., 1., 1.]]])

    - количество осей
        >>>a.ndim
        3
    - число элементов каждой оси
        >>>a.shape
        (3, 2, 5)

    - SHAPE:
        - позволяет изменять массив и сделать его одномерным
            >>>a. shape = 30
            >>>a
            array(
            [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
             1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
        - позволяет задавать размеры
            >>>a.shape = 10, 3
            >>>a
            array(
               [[1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.]])

        - !!!! SHAPE ссылается на представление одного и того же массива
            b = a.reshape(3, 2, 5)
            b
            array(
            [[[1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1.]],
            [[1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1.]],
            [[1., 1., 1., 1., 1.],
            [1., 1., 1., 1., 1.]]])

            >>>a
            array(
               [[1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.],
                [1., 1., 1.]])

        ВАЖНО ПОМНИТЬ ЧТО В NumPy МАССИВЫ И ИХ ПРЕДСТАВЛЕНИЯ РАЗНЫЕ ВЕЩИ

- СОЗДАНИЕ КОПИИ ПРЕДСТАВЛЕНИЯ

    a.view() # создание копии ПРЕДСТАВЛЕНИЯ массива

    с = a.copy() # копия массива
