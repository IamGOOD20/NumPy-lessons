ОБЪЕДИНЕНИЕ И РАЗДЕЛЕНИЕ МАССИВОВ

- ОБЪЕДИНЕНИЕ МАССИВОВ
    >>>a = np.array([(1, 2), (3, 4)])
    >>>b = np.array([(5, 6), (7, 8)])
    >>>np.hstack([a, b]) # ПО ГОРИЗОНТАЛИ
    array(
       [[1, 2, 5, 6],
        [3, 4, 7, 8]])

    >>>np.vstack([a, b]) # [a, b, a, a]
    array(
       [[1, 2],
        [3, 4],
        [5, 6],
        [7, 8]])

    - пример
    >>>a = np.fromstring('1 2 3 4', sep= ' ')
    >>>b = np.fromstring('5 6 7 8', sep = ' ')
    >>>a
    array([1., 2., 3., 4.])
    >>>b
    array([5., 6., 7., 8.])

    >>>np.hstack([a, b])
    array([1., 2., 3., 4., 5., 6., 7., 8.])
    >>>np.vstack([a, b])
    array(
      [[1., 2., 3., 4.],
       [5., 6., 7., 8.]])

- ОБЪЕДИНЕНИЕ ОДНОМЕРНЫХ МАССИВОВ СТОЛБЦАМИ, ПОЛУЧАЕМ ТАБЛИЦУ column_stack
    >>>a
    array([1., 2., 3., 4.])
    >>>b
    array([5., 6., 7., 8.])
    >>>np.column_stack([a, b])
    array(
      [[1., 5.],
       [2., 6.],
       [3., 7.],
       [4., 8.]])
    - np.row_stack([a, b])
        array(
        [[1., 2., 3., 4.],
        [5., 6., 7., 8.]])

- ОБЪЕДИНЕНИЕ ПО 2, 3, ИЛИ ДРУГОЙ ОСЯМ ФУНКЦИЯ concatenate()


- ОБЪЕДИНЕНИЕ С ПОМОЩЬЮ ОБЪЕКТОВ r_ и c_

   - r_
        >>>np.r_[ [1, 2, 3], 4, 5]
        array([1, 2, 3, 4, 5])
        >>>np.r_[ 1:9, 90, 100]
        array([  1,   2,   3,   4,   5,   6,   7,   8,  90, 100])
        >>>np.r_[ np.array([1, 2, 3]), np.array([4, 5, 6])]
        array([1, 2, 3, 4, 5, 6])
        >>>np.r_ [ [(1, 2, 3), (4, 5, 6)], [(7, 8, 9)]]
        array(
              [[1, 2, 3],
               [4, 5, 6],
               [7, 8, 9]])

   - c_ разница, с делает обьединение по второй оси
        >>>np.c_[1:5]
        array(
              [[1],
               [2],
               [3],
               [4]])
        >>>np.c_[[1, 2, 3], [4, 5, 6]]
        array([[1, 4],
               [2, 5],
               [3, 6]])


- РАЗДЕЛЕНИЕ МАССИВА hsplit & vsplit
    - hsplit
    >>>a = np.arange(10)
    >>>a
    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
    >>>np.hsplit(a, 2)
    [array([0, 1, 2, 3, 4]), array([5, 6, 7, 8, 9])]


    - vsplit
    >>>a.shape = 10, -1
    >>>a
    array([[0],
           [1],
           [2],
           [3],
           [4],
           [5],
           [6],
           [7],
           [8],
           [9]])
    >>>np.vsplit(a, 2)
    [array([[0],
           [1],
           [2],
           [3],
           [4]]), array([[5],
           [6],
           [7],
           [8],
           [9]])]

    >>>a = np.arange(12)
    >>>a
    array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])
    >>>a.resize(2, 6)
    >>>a
    array([[ 0,  1,  2,  3,  4,  5],
           [ 6,  7,  8,  9, 10, 11]])
    >>>np.hsplit(a, 2)
    [array(
       [[0, 1, 2],
       [6, 7, 8]]), array([[ 3,  4,  5],
       [ 9, 10, 11]])]

- ВЫПОЛНЕНИЕ РАЗБИЕНИЯ ОСИ ПО ПРОИЗВОЛЬНОЙ ОСИ array_split()
    >>>a = np.arange(18)
    >>>a
    array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17])
    >>>a.resize(3, 3, 2)
    >>>a
    array([[[ 0,  1],
            [ 2,  3],
            [ 4,  5]],
           [[ 6,  7],
            [ 8,  9],
            [10, 11]],
           [[12, 13],
            [14, 15],
            [16, 17]]])
    >>>np.array_split(a, 2, axis=2)
    [array([[[ 0],
            [ 2],
            [ 4]],
           [[ 6],
            [ 8],
            [10]],
           [[12],
            [14],
            [16]]]), array([[[ 1],
            [ 3],
            [ 5]],
           [[ 7],
            [ 9],
            [11]],
           [[13],
            [15],
            [17]]])]
    >>>np.array_split(a, 2, axis=1)
    [array([[[ 0,  1],
            [ 2,  3]],
           [[ 6,  7],
            [ 8,  9]],
           [[12, 13],
            [14, 15]]]), array([[[ 4,  5]],
           [[10, 11]],
